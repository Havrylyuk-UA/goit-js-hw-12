{"version":3,"file":"commonHelpers2.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\nimport axios from 'axios';\n\n// ! Variables\n\nconst form = document.querySelector('.form'),\n  searchInp = document.querySelector('input[type=\"text\"]'),\n  gallery = document.querySelector('.gallery'),\n  loader = document.querySelector('.loader'),\n  loadBtn = document.querySelector('.load-btn');\n\n  const API_KEY = import.meta.env.VITE_API_KEY;\n\n  const searchImg = 40;\n  let totalPage = 1;\n\n  let searchWord = '';\n  let arrImages = [];\n\nconst falseToast = {\n  icon: 'icon-false',\n  backgroundColor: '#FC5A5A',\n  message:\n    'Sorry, there are no images matching your search query. Please try again!',\n  messageColor: '#FAFAFB',\n  messageSize: '16px',\n  position: 'topRight',\n  close: false,\n};\n\n// ! End Variables\n\n// ! Function\n\nconst fetchAPI = async () => {\n  const response = await axios.get(\"https://pixabay.com/api\", {\n      params: {\n        key: API_KEY,\n        q: searchWord,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n        per_page: searchImg,\n        page: totalPage,\n      },\n    });\n    return response.data;\n};\n\nconst getImg = async () => {\n  try {\n    const data = await fetchAPI();\n\n    if (data.hits.length === 0) {\n      toggleLoader('none');\n      toggleBtn('none');\n\n      return iziToast.show(falseToast);\n    }\n\n    if (Math.ceil(data.totalHits / searchImg) === totalPage) {\n      toggleBtn('none');\n      return iziToast.show({\n        icon: 'icon-false',\n        backgroundColor: '#FC5A5A',\n        message:\n          `We're sorry, but you've reached the end of search results.`,\n        messageColor: '#FAFAFB',\n        messageSize: '16px',\n        position: 'topRight',\n        close: false,\n      })\n    }\n\n    renderImg(data)\n\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nconst renderImg = (data) => {\n  const dataList = data.hits.map(photo => {\n    return `\n    <li class=\"gallery-item\">\n      <a href=\"${photo.largeImageURL}\">\n        <img class=\"api-img\" src=\"${photo.webformatURL}\" alt=\"${photo.tags}\">\n        <div class=\"img-desc\">\n          <span><b>Likes:</b> <br/>${photo.likes}</span>\n          <span><b>Views:</b> <br/>${photo.views}</span>\n          <span><b>Comments:</b> <br/>${photo.comments}</span>\n          <span><b>Downloads:</b> <br/>${photo.downloads}</span>\n        </div>\n      </a>\n    </li>\n              `;\n  });\n\n  arrImages = dataList;\n\n  gallery.insertAdjacentHTML('beforeend', arrImages.join(''))\n\n  toggleBtn('inline-block');\n\n  scrollPage();\n\n  modalImg.refresh();\n};\n\nconst toggleLoader = (value) => {\n  loader.style.display = value;\n}\n\nconst toggleBtn = (value) => {\n  loadBtn.style.display = value;\n}\n\nconst scrollPage = () => {\n  if (totalPage > 1) {\n  const imgSize = document.querySelector ('.gallery-item').getBoundingClientRect();\n  window.scrollBy({ top: imgSize.height * 2.4, left: 0, behavior: \"smooth\" });\n  }\n}\n\n// ! End Function\n\n// ! EventListeners\n\nsearchInp.addEventListener('input', e => {\n\n  searchWord = e.target.value;\n});\n\nform.addEventListener('submit', async (e) => {\n  e.preventDefault();\n  toggleBtn('none');\n\n  arrImages = [];\n  totalPage = 1;\n\n  gallery.innerHTML = '';\n\n  toggleLoader('inline-block');\n\n  await getImg();\n\n  if (arrImages.length > 0) {\n    toggleBtn('inline-block');\n  }\n\n  toggleLoader('none');\n\n  searchInp.value = '';\n\n});\n\nloadBtn.addEventListener(\"click\", async () => {\n  toggleBtn('none');\n  toggleLoader('inline-block')\n\n  totalPage += 1;\n\n  await getImg();\n\n  toggleLoader('none');\n});\n\n// ! End EventListeners\n\nconst modalImg = new SimpleLightbox('.gallery a', {\n  overlayOpacity: 0,\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n"],"names":["form","searchInp","gallery","loader","loadBtn","API_KEY","searchImg","totalPage","searchWord","arrImages","falseToast","fetchAPI","axios","getImg","data","toggleLoader","toggleBtn","iziToast","renderImg","error","photo","scrollPage","modalImg","value","imgSize","SimpleLightbox"],"mappings":"owBAMA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACzCC,EAAY,SAAS,cAAc,oBAAoB,EACvDC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAU,SAAS,cAAc,WAAW,EAEtCC,EAAU,qCAEVC,EAAY,GAClB,IAAIC,EAAY,EAEZC,EAAa,GACbC,EAAY,CAAA,EAElB,MAAMC,EAAa,CACjB,KAAM,aACN,gBAAiB,UACjB,QACE,2EACF,aAAc,UACd,YAAa,OACb,SAAU,WACV,MAAO,EACT,EAMMC,EAAW,UACE,MAAMC,EAAM,IAAI,0BAA2B,CACxD,OAAQ,CACN,IAAKP,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAUF,EACV,KAAMC,CACP,CACP,CAAK,GACe,KAGdM,EAAS,SAAY,CACzB,GAAI,CACF,MAAMC,EAAO,MAAMH,IAEnB,GAAIG,EAAK,KAAK,SAAW,EACvB,OAAAC,EAAa,MAAM,EACnBC,EAAU,MAAM,EAETC,EAAS,KAAKP,CAAU,EAGjC,GAAI,KAAK,KAAKI,EAAK,UAAYR,CAAS,IAAMC,EAC5C,OAAAS,EAAU,MAAM,EACTC,EAAS,KAAK,CACnB,KAAM,aACN,gBAAiB,UACjB,QACE,6DACF,aAAc,UACd,YAAa,OACb,SAAU,WACV,MAAO,EACf,CAAO,EAGHC,EAAUJ,CAAI,CAEf,OAAQK,EAAP,CACA,QAAQ,MAAMA,EAAM,OAAO,CAC5B,CACH,EAEMD,EAAaJ,GAAS,CAiB1BL,EAhBiBK,EAAK,KAAK,IAAIM,GACtB;AAAA;AAAA,iBAEMA,EAAM;AAAA,oCACaA,EAAM,sBAAsBA,EAAM;AAAA;AAAA,qCAEjCA,EAAM;AAAA,qCACNA,EAAM;AAAA,wCACHA,EAAM;AAAA,yCACLA,EAAM;AAAA;AAAA;AAAA;AAAA,eAK5C,EAIDlB,EAAQ,mBAAmB,YAAaO,EAAU,KAAK,EAAE,CAAC,EAE1DO,EAAU,cAAc,EAExBK,IAEAC,EAAS,QAAO,CAClB,EAEMP,EAAgBQ,GAAU,CAC9BpB,EAAO,MAAM,QAAUoB,CACzB,EAEMP,EAAaO,GAAU,CAC3BnB,EAAQ,MAAM,QAAUmB,CAC1B,EAEMF,EAAa,IAAM,CACvB,GAAId,EAAY,EAAG,CACnB,MAAMiB,EAAU,SAAS,cAAe,eAAe,EAAE,sBAAqB,EAC9E,OAAO,SAAS,CAAE,IAAKA,EAAQ,OAAS,IAAK,KAAM,EAAG,SAAU,QAAU,CAAA,CACzE,CACH,EAMAvB,EAAU,iBAAiB,QAAS,GAAK,CAEvCO,EAAa,EAAE,OAAO,KACxB,CAAC,EAEDR,EAAK,iBAAiB,SAAU,MAAO,GAAM,CAC3C,EAAE,eAAc,EAChBgB,EAAU,MAAM,EAEhBP,EAAY,CAAA,EACZF,EAAY,EAEZL,EAAQ,UAAY,GAEpBa,EAAa,cAAc,EAE3B,MAAMF,EAAM,EAERJ,EAAU,OAAS,GACrBO,EAAU,cAAc,EAG1BD,EAAa,MAAM,EAEnBd,EAAU,MAAQ,EAEpB,CAAC,EAEDG,EAAQ,iBAAiB,QAAS,SAAY,CAC5CY,EAAU,MAAM,EAChBD,EAAa,cAAc,EAE3BR,GAAa,EAEb,MAAMM,EAAM,EAEZE,EAAa,MAAM,CACrB,CAAC,EAID,MAAMO,EAAW,IAAIG,EAAe,aAAc,CAChD,eAAgB,EAChB,aAAc,MACd,aAAc,GAChB,CAAC"}